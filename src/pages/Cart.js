// src/pages/CartPage.jsx
import React, { useMemo } from 'react';
import { Link } from 'react-router-dom';
import { useCart } from '../context/CartContext';

const formatTHB = (n) =>
  new Intl.NumberFormat('th-TH', { style: 'currency', currency: 'THB' }).format(Number(n || 0));

const SHIPPING_THRESHOLD = 1000; // ‡∏™‡πà‡∏á‡∏ü‡∏£‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏≠‡∏î‡∏ñ‡∏∂‡∏á
const SHIPPING_FEE = 50;

export default function CartPage() {
  const { cart, removeFromCart, setQty, clearCart } = useCart();

  const { subtotal, totalQty, shipping, total } = useMemo(() => {
    const subtotal = cart.reduce((sum, i) => sum + (Number(i.price) || 0) * (i.qty || 1), 0);
    const totalQty = cart.reduce((s, i) => s + (i.qty || 0), 0);
    const shipping = subtotal === 0 || subtotal >= SHIPPING_THRESHOLD ? 0 : SHIPPING_FEE;
    const total = subtotal + shipping;
    return { subtotal, totalQty, shipping, total };
  }, [cart]);

  if (cart.length === 0) {
    return (
      <div className="max-w-5xl mx-auto p-6">
        <div className="bg-white dark:bg-neutral-900 rounded-2xl shadow-sm border border-neutral-200/70 dark:border-neutral-800 p-10 text-center">
          <div className="text-6xl mb-4">üõçÔ∏è</div>
          <h1 className="text-2xl font-bold mb-2">‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà</h1>
          <p className="text-neutral-500 mb-6">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ä‡πâ‡∏≠‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</p>
          <Link
            to="/"
            className="inline-flex items-center gap-2 px-5 py-3 rounded-xl bg-neutral-900 text-white hover:-translate-y-0.5 active:translate-y-0 transition"
          >
            ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            <span>‚Üí</span>
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-6xl mx-auto p-6">
      <h1 className="text-2xl md:text-3xl font-extrabold tracking-tight mb-6">‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* ‡∏ã‡πâ‡∏≤‡∏¢: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
        <div className="lg:col-span-2">
          <ul className="space-y-4">
            {cart.map((item) => {
              const price = Number(item.price) || 0;
              const qty = item.qty || 1;
              const lineTotal = price * qty;
              return (
                <li
                  key={item.id}
                  className="group bg-white dark:bg-neutral-900 rounded-2xl shadow-sm border border-neutral-200/70 dark:border-neutral-800 p-4 md:p-5 hover:shadow-md transition"
                >
                  <div className="flex items-start gap-4 md:gap-5">
                    <div className="relative w-20 h-20 md:w-24 md:h-24 shrink-0 overflow-hidden rounded-xl bg-neutral-100 dark:bg-neutral-800">
                      {item.image ? (
                        <img
                          src={item.image}
                          alt={item.name}
                          className="w-full h-full object-cover"
                          loading="lazy"
                        />
                      ) : (
                        <div className="w-full h-full grid place-items-center text-neutral-400">IMG</div>
                      )}
                    </div>

                    <div className="flex-1 min-w-0">
                      <div className="flex items-start justify-between gap-2">
                        <div className="min-w-0">
                          <p className="font-semibold truncate">{item.name}</p>
                          <p className="text-sm text-neutral-500 mt-0.5">
                            {formatTHB(price)} / ‡∏ä‡∏¥‡πâ‡∏ô
                          </p>
                        </div>

                        <button
                          onClick={() => removeFromCart(item.id)}
                          className="text-red-600 hover:text-red-700 text-sm font-medium"
                          aria-label={`‡∏•‡∏ö ${item.name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤`}
                        >
                          ‡∏•‡∏ö
                        </button>
                      </div>

                      {/* ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô + ‡∏£‡∏≤‡∏Ñ‡∏≤ */}
                      <div className="mt-4 flex flex-wrap items-center justify-between gap-3">
                        <div className="flex items-center rounded-xl border border-neutral-200 dark:border-neutral-700 overflow-hidden">
                          <button
                            onClick={() => setQty(item.id, Math.max(1, qty - 1))}
                            className="px-3 py-2 hover:bg-neutral-50 dark:hover:bg-neutral-800 disabled:opacity-40"
                            disabled={qty <= 1}
                            aria-label="‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                          >
                            ‚àí
                          </button>
                          <input
                            className="w-12 text-center outline-none border-x border-neutral-200 dark:border-neutral-700 py-2 bg-white dark:bg-neutral-900"
                            type="number"
                            min={1}
                            value={qty}
                            onChange={(e) => {
                              const v = Math.max(1, Number(e.target.value) || 1);
                              setQty(item.id, v);
                            }}
                            aria-label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                          />
                          <button
                            onClick={() => setQty(item.id, qty + 1)}
                            className="px-3 py-2 hover:bg-neutral-50 dark:hover:bg-neutral-800"
                            aria-label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                          >
                            +
                          </button>
                        </div>

                        <div className="text-right">
                          <div className="text-sm text-neutral-500">‡∏£‡∏ß‡∏°</div>
                          <div className="text-lg font-bold">{formatTHB(lineTotal)}</div>
                        </div>
                      </div>
                    </div>
                  </div>
                </li>
              );
            })}
          </ul>

          <div className="mt-6 flex items-center justify-between">
            <button
              onClick={clearCart}
              className="text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white underline underline-offset-2"
            >
              ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            </button>
            <Link
              to="/"
              className="text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white"
            >
              ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πà‡∏≠ ‚Üí
            </Link>
          </div>
        </div>

        {/* ‡∏Ç‡∏ß‡∏≤: ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
        <aside className="lg:col-span-1">
          <div className="lg:sticky lg:top-6 bg-white dark:bg-neutral-900 rounded-2xl shadow-sm border border-neutral-200/70 dark:border-neutral-800 p-5">
            <h2 className="text-lg font-bold mb-4">‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h2>

            <div className="space-y-3 text-sm">
              <div className="flex justify-between">
                <span>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</span>
                <span className="font-medium">{totalQty} ‡∏ä‡∏¥‡πâ‡∏ô</span>
              </div>
              <div className="flex justify-between">
                <span>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</span>
                <span className="font-medium">{formatTHB(subtotal)}</span>
              </div>
              <div className="flex justify-between">
                <span>‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</span>
                <span className="font-medium">
                  {shipping === 0 ? '‡∏ü‡∏£‡∏µ' : formatTHB(shipping)}
                </span>
              </div>

              {subtotal < SHIPPING_THRESHOLD && (
                <div className="text-xs text-amber-600 bg-amber-50 border border-amber-200 rounded-lg p-2">
                  ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å {formatTHB(SHIPPING_THRESHOLD - subtotal)} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡πà‡∏á‡∏ü‡∏£‡∏µ
                </div>
              )}

              <div className="border-t border-neutral-200 dark:border-neutral-800 pt-3 flex justify-between text-base">
                <span className="font-semibold">‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡∏£‡∏ß‡∏°</span>
                <span className="font-extrabold">{formatTHB(total)}</span>
              </div>
            </div>

            <button
              className="w-full mt-5 h-12 rounded-xl bg-neutral-900 text-white font-semibold hover:-translate-y-0.5 active:translate-y-0 transition"
              onClick={() => alert('‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå (‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå/‡πÄ‡∏ô‡∏ß‡∏¥‡πÄ‡∏Å‡∏ï‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)')}
            >
              ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
            </button>

            <p className="mt-3 text-xs text-neutral-500">
              ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            </p>
          </div>
        </aside>
      </div>
    </div>
  );
}
